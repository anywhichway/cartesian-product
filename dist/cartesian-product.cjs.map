{"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GACD,UAAU,gCAAU,IAAI,EAAE,GAAG,IAAI,EAAE;IAC/B,MAAM,YAAY,KAAK,MAAM,GAAG,IAAI,mCAAa,QAAQ;QAAC,EAAE;KAAC;IAC7D,KAAK,IAAI,KAAK,UAAW,KAAK,IAAI,KAAK,KAAM,MAAM;QAAC;WAAM;KAAE;AAChE;AAEA,SAAS,yCAAiB,GAAG,MAAM,EAAE;IACjC,IAAI,OAAO,MAAM,KAAK,GAAG;IACzB,MAAM,YAAY,mCAAa;IAC/B,OAAO,cAAc,CAAC,WAAU,UAAS;QAAC,OAAK;YAAC,OAAO,OAAO,MAAM,CAAC,CAAC,GAAE,IAAI,IAAE,EAAE,MAAM,EAAC;QAAE;IAAC;IAC1F,OAAO;AACX","sources":["src/index.js"],"sourcesContent":["/*\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n */\r\nfunction* cartesian(head, ...tail) {\r\n    const remainder = tail.length > 0 ? cartesian(...tail) : [[]];\r\n    for (let r of remainder) for (let h of head) yield [h, ...r];\r\n}\r\n\r\nfunction cartesianProduct(...arrays) {\r\n    if (arrays.length === 0) return;\r\n    const generator = cartesian(...arrays);\r\n    Object.defineProperty(generator,\"length\",{get(){return arrays.reduce((a,b)=>a*b.length,1)}});\r\n    return generator;\r\n}\r\n\r\nexport {cartesianProduct as default, cartesianProduct}"],"names":[],"version":3,"file":"cartesian-product.cjs.map"}